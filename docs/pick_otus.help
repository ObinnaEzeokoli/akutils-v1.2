
*****************************
***                       ***
***   akutils pick_otus   ***
***                       ***
*****************************

Process raw data all the way to OTU tables.

Usage (order is important!!):
	akutils pick_otus [mode]

	Valid modes are 16S, ITS or other.

This script takes an input directory and attempts to process the contents
through a qiime workflow.  The workflow references a config file.  Default is to
reference a global config file.  If present in the execution directory, a local
file will override any global settings.

Example:
akutils pick_otus 16S

This example will attempt to process data residing in the current directory
through a complete qiime workflow.  If certain conventions are met, the workflow
will skip all steps that have already been processed.  If it crashes and then
you restart it, it won't try to reprocess the steps that are already completed.  

Order of processing attempts:
Checks for <input folder>/split_libraries/seqs.fna.  If present, moves forward
to chimera filter or OTU picking.  If absent, checks for fastq files in
execution directory to process (as idx.fq and rd.fq). Requires a single mapping
file be present (any file in the execution directory that begins with "map").

Workflow details:
	1) Split libraries (set -q, -r and -p in config)
	2) Chimera filtering with vsearch (16S or ITS only)
	3) ITSx (ITS only)
	4) Prefix/suffix dereplication (set in config)
	5) OTU picking (choose method and threads in config)
	6) Taxonomy assignment (choose method and threads in config)
	7) Make, filter, and summarize OTU tables

Mapping file:
Mapping files are formatted for QIIME.  Index sequences contained therein must
be in the CORRECT orientation.

Parameters file:
Only certain parameters can be addressed via akutils.  These include OTU percent
similarity threshold (or resolution for swarm), max_accepts and max_rejects for
UCLUST picking (openref OTU picker).  The parameters file must reside in the
execution directory and begin with "parameter."

Example parameters file contents (parameters_fast.txt):
<example file start>
pick_otus:similarity 0.97
pick_otus:max_accepts 1
pick_otus:max_rejects 8
<example file end>

This workflow can also process sequence files at multiple similarity thresholds
or resolutions in a single pass.  The following parameter file will process data
at 5 swarm resolutions as long as swarm (or ALL) is chosen in the config file:
<example file start>
pick_otus:swarm_resolution 1
pick_otus:swarm_resolution 2
pick_otus:swarm_resolution 3
pick_otus:swarm_resolution 4
pick_otus:swarm_resolution 5
<example file end>

If no parameters are supplied, defaults will be used.  Default OTU picking
parameters:
pick_otus:similarity 0.97
pick_otus:swarm_resolution 1
pick_otus:max_accepts 20
pick_otus:max_rejects 500

Output:
Filtered OTU tables will be found in the OTU table directory within the OTU
picking directory.  For example:

	swarm_otus_d1/OTU_tables_blast/

be 7 different OTU tables per OTU table directory plus summaries of these
tables:

1) raw_OTU_tables/raw_otu_table.biom - unfiltered table
2) raw_OTU_tables/raw_otu_table_bacteria/fungi_only.biom - if mode is 16S or ITS
3) raw_OTU_tables/min100_table.biom - samples <100 counts removed
4) mc2_table.biom - singletons removed by table
5) n2_table.biom - singletons removed by sample, private OTUs removed
6) 005_table.biom - OTUs <0.005% removed by table
7) 03_table.biom - OTUs <0.3% removed by sample

Configurable settings (akutils config file):
	Split_libraries_qvalue		-- value to consider a low-quality base
	Split_libraries_minpercent	-- Percent of read required to retain it
	Split_libraries_maxbad		-- Maximum low-quality bases to allow
	Reference			-- Your reference database sequences
	Taxonomy			-- Your reference database taxonomy
	Chimeras			-- Your chimera reference database
	Prefix_length			-- Prefix for dereplication (0 disables)
	Suffix_length			-- Suffix for dereplication (0 disables)
	OTU_picker			-- OTU picking method to use
	Tax_assigner			-- Taxonomic assignment to use
	ITSx_options			-- Options for ITSx (ITS mode only)
	CPU_cores			-- Processors to use during analysis

Requires the following dependencies to run all steps:
	1) QIIME 1.9.1 (qiime.org)
	2) vsearch (https://github.com/torognes/vsearch)
	3) ITSx
		
Citations: 

QIIME: 
Caporaso, J., Kuczynski, J., & Stombaugh, J. (2010).  QIIME allows
analysis of high-throughput community sequencing data. Nature Methods, 
7(5), 335â€“336.

vsearch:
https://github.com/torognes/vsearch

ITSx:
Johan Bengtsson-Palme, Vilmar Veldre, Martin Ryberg, Martin Hartmann,
Sara Branco, Zheng Wang, Anna Godhe, Yann Bertrand, Pierre De Wit,
Marisol Sanchez, Ingo Ebersberger, Kemal Sanli, Filipe de Souza, Erik
Kristiansson, Kessy Abarenkov, K. Martin Eriksson, R. Henrik Nilsson
(2013).  ITSx: Improved software detection and extraction of ITS1 and
ITS2 from ribosomal ITS sequences of fungi and other eukaryotes for
use in environmental sequencing. Methods in Ecology and Evolution, 4:
914-919.

